
Zen Class Programme - Database Design, Sample Data and Queries

Database Collections and Schema

1. users
   - user_id (ObjectId)
   - name (string)
   - email (string)
   - batch (string)
   - attendance_status (string)

2. codekata
   - user_id (ObjectId, reference to users)
   - problems_solved (number)

3. attendance
   - user_id (ObjectId, reference to users)
   - date (date)
   - status (string: "present"/"absent")

4. topics
   - topic_id (ObjectId)
   - topic_name (string)
   - date (date)

5. tasks
   - task_id (ObjectId)
   - topic_id (ObjectId, reference to topics)
   - user_id (ObjectId, reference to users)
   - submission_status (string: "submitted"/"not submitted")
   - date (date)

6. company_drives
   - drive_id (ObjectId)
   - company_name (string)
   - date (date)
   - student_ids (array of ObjectId, reference to users)

7. mentors
   - mentor_id (ObjectId)
   - name (string)
   - mentee_ids (array of ObjectId, reference to users)

Sample Data

1. users
[
  { "_id": "1", "name": "John", "email": "john@example.com", "batch": "B1", "attendance_status": "present" },
  { "_id": "2", "name": "Badmanaban", "email": "Badmanaban@example.com", "batch": "B1", "attendance_status": "absent" },
  { "_id": "3", "name": "Datch", "email": "Datch@example.com", "batch": "B2", "attendance_status": "present" },
  { "_id": "4", "name": "Priya", "email": "Priya@example.com", "batch": "B2", "attendance_status": "absent" }
]

2. codekata
[ 
  { "user_id": "1", "problems_solved": 45 },
  { "user_id": "2", "problems_solved": 20 },
  { "user_id": "3", "problems_solved": 75 },
  { "user_id": "4", "problems_solved": 10 }
]

3. attendance
[
  { "user_id": "1", "date": "2020-10-20", "status": "present" },
  { "user_id": "2", "date": "2020-10-20", "status": "absent" },
  { "user_id": "3", "date": "2020-10-20", "status": "present" },
  { "user_id": "4", "date": "2020-10-20", "status": "absent" }
]

4. topics
[
  { "_id": "101", "topic_name": "React Basics", "date": "2020-10-05" },
  { "_id": "102", "topic_name": "Node.js", "date": "2020-10-15" },
  { "_id": "103", "topic_name": "MongoDB", "date": "2020-09-25" }
]

5. tasks
[
  { "_id": "201", "topic_id": "101", "user_id": "1", "submission_status": "submitted", "date": "2020-10-06" },
  { "_id": "202", "topic_id": "102", "user_id": "2", "submission_status": "not submitted", "date": "2020-10-16" },
  { "_id": "203", "topic_id": "102", "user_id": "4", "submission_status": "not submitted", "date": "2020-10-18" },
  { "_id": "204", "topic_id": "103", "user_id": "3", "submission_status": "submitted", "date": "2020-09-26" }
]

6. company_drives
[
  { "drive_id": "301", "company_name": "Google", "date": "2020-10-20", "student_ids": ["1", "3"] },
  { "drive_id": "302", "company_name": "Amazon", "date": "2020-10-25", "student_ids": ["2", "4"] },
  { "drive_id": "303", "company_name": "Microsoft", "date": "2020-09-15", "student_ids": ["1", "2"] }
]

7. mentors
[
  { "mentor_id": "401", "name": "Mr. Rajavasanth", "mentee_ids": ["1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16"] },
  { "mentor_id": "402", "name": "Mr. Suresh", "mentee_ids": ["1","3"] }
]

Queries

1. Find all the topics and tasks which are thought in the month of October
db.topics.find({ date: { $gte: ("2020-10-01"), $lte: ("2020-10-31") } });
db.tasks.find({ date: { $gte: ("2020-10-01"), $lte: ("2020-10-31") } });

2. Find all the company drives which appeared between 15 oct-2020 and 31-oct-2020
db.company_drives.find({ date: { $gte:("2020-10-15"), $lte: ("2020-10-31") } });

3. Find all the company drives and students who are appeared for the placement
db.company_drives.aggregate([
  { $unwind: "$student_ids" },
  { $lookup: {
      from: "users",
      localField: "student_ids",
      foreignField: "_id",
      as: "student_details"
    }
  },
  { $project: { company_name: 1, date: 1, "student_details.name": 1, "student_details.email": 1 } }
]);

4. Find the number of problems solved by the user in codekata
db.codekata.aggregate([
  { $group: { _id: "$user_id", totalSolved: { $sum: "$problems_solved" } } }
]);

5. Find all the mentors with who has the mentee's count more than 15
db.mentors.find({ $where: "this.mentee_ids.length > 15" });

6. Find the number of users who are absent and task is not submitted between 15 oct-2020 and 31-oct-2020
db.attendance.aggregate([
  { $match: { date: { $gte: ("2020-10-15"), $lte: ("2020-10-31") }, status: "absent" } },
  { $lookup: {
      from: "tasks",
      localField: "user_id",
      foreignField: "user_id",
      as: "tasks"
    }
  },
  { $unwind: "$tasks" },
  { $match: { "tasks.submission_status": "not submitted", "tasks.date": { $gte:("2020-10-15"), $lte: ("2020-10-31") } } },
  { $group: { _id: "$user_id" } },
  { $count: "absent_and_not_submitted_count" }
]);
